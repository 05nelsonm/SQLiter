buildscript {
    repositories {
        jcenter()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    }
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

group = GROUP
version = VERSION_NAME

kotlin {
    targets {
//        fromPreset(presets.jvm, 'jvm')
//        fromPreset(presets.macosX64, 'nativeCommon')

        fromPreset(presets.macosX64, 'macos') {
            compilations.each {
                it.extraOpts("-linker-options", "-lsqlite3")
            }
        }

        fromPreset(presets.iosX64, 'iosX64') {
            compilations.each {
                it.extraOpts("-linker-options", "-lsqlite3")
            }
        }

        fromPreset(presets.iosArm64, 'iosArm64') {
            compilations.each {
                it.extraOpts("-linker-options", "-lsqlite3")
            }
        }

        fromPreset(presets.iosArm32, 'iosArm32') {
            compilations.each {
                it.extraOpts("-linker-options", "-lsqlite3")
            }
        }

    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation "co.touchlab:stately:$STATELY_VERSION"
                implementation "co.touchlab:sqliter:$SQLITER_VERSION"
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        /*jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }*/
        nativeCommonMain {}
        nativeCommonTest {}

        configure([iosX64Main, iosArm32Main, iosArm64Main, macosMain]) {
            dependsOn nativeCommonMain
        }

        configure([iosX64Test, iosArm32Test, iosArm64Test, macosTest]) {
            dependsOn nativeCommonTest
        }
    }
}

configurations {
    compileClasspath
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"